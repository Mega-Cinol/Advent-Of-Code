int x = 0;
int y = 0;
int z = 0;
int w = 0;

w = in[0];
z = w + 6;

w = in[1];
z *= 26;
z += w + 6;

w = in[2];
z *= 26;
z += w + 3;

w = in[3]; // ((in[2] + 3) % 26 - 11 == in[3]) => in[2] == 9 && in[3] == 1
x = z % 26 - 11;
z /= 26;
x = x == w ? 0 : 1;
z *= 25 * x + 1;
z += (w + 11) * x;

w = in[4];
z *= 26;
z += w + 9;

w = in[5]; // ((in[4] + 9) % 26 - 1 == in[5]) => in[4] == 1 && in[5] == 9
x = z % 26 - 1;
z /= 26;
x = x == w ? 0 : 1;
z *= 25 * x + 1;
z += (w + 3) * x;

w = in[6];
z *= 26;
z += w + 13;

w = in[7];
z *= 26;
z += w + 6;

w = in[8]; // ((in[7] + 6) % 26 == in[8]) => in[7] == <1, 3> && in[8] == <7, 9>
x = z % 26;
z /= 26;
x = x == w ? 0 : 1;
z *= 25 * x + 1;
z += (w + 14) * x;

w = in[9];
z *= 26;
z += w + 10;

w = in[10]; // ((in[9] + 10) % 26 - 5 == in[10]) => in[9] == <1, 4> && in[10] == <6, 9>
x = z % 26 - 5;
z /= 26;
x = x == w ? 0 : 1;
z *= 25 * x + 1;
z += (w + 12) * x;

w = in[11]; // ((in[6] + 13) % 26 - 16 == in[11]) => in[6] == <4, 9> && in[11] == <1, 6>
x = z % 26 - 16;
z /= 26;
x = x == w ? 0 : 1;
z *= 25 * x + 1;
z += (w + 10) * x;

w = in[12]; // ((in[1] + 6) % 26 - 7 == in[12]) => in[1] == <2, 9> && in[12] == <1, 8>
x = z % 26 - 7;
z /= 26;
x = x == w ? 0 : 1;
z *= 25 * x + 1;
z += (w + 11) * x;

w = in[13]; // ((in[0] + 6) % 26 - 11 == in[13]) => in[0] == <6, 9> && in[13] == <1, 4>
x = z % 26 - 11;
z /= 26;
x = x == w ? 0 : 1;
z *= 25 * x + 1;
z += (w + 15) * x;

max:   // 99911993949684
0  - 9
1  - 9
2  - 9
3  - 1
4  - 1
5  - 9
6  - 9
7  - 3
8  - 9
9  - 4
10 - 9
11 - 6
12 - 8
13 - 4

min:   // 62911941716111
0  - 6
1  - 2
2  - 9
3  - 1
4  - 1
5  - 9
6  - 4
7  - 1
8  - 7
9  - 1
10 - 6
11 - 1
12 - 1
13 - 1
